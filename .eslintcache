[{"C:\\dev\\blackjack-js\\src\\index.js":"1","C:\\dev\\blackjack-js\\src\\views\\Root\\Root.js":"2","C:\\dev\\blackjack-js\\src\\components\\Card\\Card.js":"3","C:\\dev\\blackjack-js\\src\\components\\Economy\\Economy.js":"4","C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet-Buttons.js":"5","C:\\dev\\blackjack-js\\src\\context\\Economy-Context.js":"6","C:\\dev\\blackjack-js\\src\\components\\Controls\\Controls.js":"7","C:\\dev\\blackjack-js\\src\\components\\Actions\\Actions.js":"8","C:\\dev\\blackjack-js\\src\\components\\History\\History.js":"9","C:\\dev\\blackjack-js\\src\\components\\Economy\\Money\\Money.js":"10","C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet\\Bet.js":"11","C:\\dev\\blackjack-js\\src\\components\\ScoreHistory\\ScoreHistory.js":"12","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveLoadGame.js":"13","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveGame\\SaveGame.js":"14","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\LoadGame\\LoadGame.js":"15","C:\\dev\\blackjack-js\\src\\components\\ResetGame\\ResetGame.js":"16","C:\\dev\\blackjack-js\\src\\components\\CurrentRound\\CurrentRound.js":"17","C:\\dev\\blackjack-js\\src\\components\\Hands\\Hands.js":"18","C:\\dev\\blackjack-js\\src\\components\\Hands\\PlayersHand\\PlayersHand.js":"19","C:\\dev\\blackjack-js\\src\\components\\Hands\\DealersHand\\DealersHand.js":"20"},{"size":212,"mtime":1610720067165,"results":"21","hashOfConfig":"22"},{"size":943,"mtime":1611079085270,"results":"23","hashOfConfig":"22"},{"size":554,"mtime":1610808401113,"results":"24","hashOfConfig":"22"},{"size":1059,"mtime":1611086709316,"results":"25","hashOfConfig":"22"},{"size":2334,"mtime":1611087033002,"results":"26","hashOfConfig":"22"},{"size":3541,"mtime":1611133025230,"results":"27","hashOfConfig":"22"},{"size":2075,"mtime":1611141717300,"results":"28","hashOfConfig":"22"},{"size":8677,"mtime":1611141724151,"results":"29","hashOfConfig":"22"},{"size":2499,"mtime":1611141720434,"results":"30","hashOfConfig":"22"},{"size":469,"mtime":1611080005078,"results":"31","hashOfConfig":"22"},{"size":363,"mtime":1611079190052,"results":"32","hashOfConfig":"22"},{"size":2741,"mtime":1611141721632,"results":"33","hashOfConfig":"22"},{"size":213,"mtime":1611141721851,"results":"34","hashOfConfig":"22"},{"size":1259,"mtime":1611133099689,"results":"35","hashOfConfig":"22"},{"size":1263,"mtime":1611135838792,"results":"36","hashOfConfig":"22"},{"size":1540,"mtime":1611133139112,"results":"37","hashOfConfig":"22"},{"size":403,"mtime":1611139986143,"results":"38","hashOfConfig":"22"},{"size":527,"mtime":1611139903670,"results":"39","hashOfConfig":"22"},{"size":1235,"mtime":1611139644091,"results":"40","hashOfConfig":"22"},{"size":1981,"mtime":1611139602247,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xb18w0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\blackjack-js\\src\\index.js",[],["86","87","88","89","90"],"C:\\dev\\blackjack-js\\src\\views\\Root\\Root.js",[],"C:\\dev\\blackjack-js\\src\\components\\Card\\Card.js",[],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Economy.js",["91"],"import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useEconomyContext } from '../../context/Economy-Context';\r\nimport { BetButtons } from './Bet-Buttons';\r\n\r\nimport Bet from './Bet/Bet';\r\n\r\nconst StyledPlaceBet = styled.h2`\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-top: 50px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 250px;\r\n  height: 40px;\r\n  margin-left: -125px;\r\n  margin-top: -200px;\r\n`;\r\n\r\nexport const Economy = () => {\r\n  const { setDeckID, gameStarted, roundOver } = useEconomyContext();\r\n\r\n  useEffect(() => {\r\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6')\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        setDeckID(json.deck_id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {!gameStarted && <StyledPlaceBet>Place Your Bets</StyledPlaceBet>}\r\n      </div>\r\n      <div>\r\n        <Bet />\r\n        {!roundOver && !gameStarted && <BetButtons />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet-Buttons.js",[],"C:\\dev\\blackjack-js\\src\\context\\Economy-Context.js",[],"C:\\dev\\blackjack-js\\src\\components\\Controls\\Controls.js",["92"],"import styled from 'styled-components';\r\nimport { useEconomyContext } from '../../context/Economy-Context';\r\nimport Actions from '../Actions/Actions';\r\nimport Hands from '../Hands/Hands';\r\n\r\nconst StyledDeal = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 20px;\r\n  margin-top: 30px;\r\n  margin-left: -100px;\r\n  width: 200px;\r\n  transition: 0.4s ease color;\r\n  font-size: 1.5rem;\r\n\r\n  :hover {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst Controls = () => {\r\n  const {\r\n    bet,\r\n    deckID,\r\n    returnValue,\r\n    setDealersHand,\r\n    dealerScore,\r\n    setDealerScore,\r\n    setPlayerHand,\r\n    setPlayerScore,\r\n    gameStarted,\r\n    setGameStart,\r\n    setFirstDeal,\r\n    setPrize,\r\n    round,\r\n    setRound,\r\n    setJustLoaded,\r\n    setJustSaved,\r\n  } = useEconomyContext();\r\n\r\n  const startGame = () => {\r\n    setGameStart(true);\r\n    setFirstDeal(true);\r\n    setRound(round + 1);\r\n    setJustLoaded(false);\r\n    setJustSaved(false);\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=4`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const value0 = returnValue(json.cards[0].value);\r\n        const value1 = returnValue(json.cards[1].value);\r\n        const value2 = returnValue(json.cards[2].value);\r\n        const value3 = returnValue(json.cards[3].value);\r\n\r\n        setPlayerHand(json.cards.slice(0, 2));\r\n        setPlayerScore(value0 + value1);\r\n\r\n        setDealersHand(json.cards.slice(2, 4));\r\n        setDealerScore(value2 + value3);\r\n      })\r\n      .catch((err) => console.log(err.name))\r\n      .then(() => {\r\n        setPrize(bet * 1.5);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {bet > 0 && deckID && !gameStarted && (\r\n        <StyledDeal type=\"button\" onClick={startGame}>\r\n          Deal\r\n        </StyledDeal>\r\n      )}\r\n\r\n      {dealerScore > 0 && gameStarted && (\r\n        <div>\r\n          <Actions />\r\n          <Hands />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","C:\\dev\\blackjack-js\\src\\components\\Actions\\Actions.js",["93","94","95"],"import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useEconomyContext } from '../../context/Economy-Context';\r\n\r\nconst StyledButtonsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  outline: none;\r\n  background: none;\r\n  border: 1px solid #fff;\r\n  color: #fff;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n  transition: 0.4s ease opacity;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst StyledSummaryWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ParagraphWin = styled.p`\r\n  color: rgba(41, 241, 195, 1);\r\n`;\r\n\r\nconst ParagraphLost = styled.p`\r\n  color: red;\r\n`;\r\n\r\nconst ParagraphTie = styled.p`\r\n  color: #fff;\r\n`;\r\n\r\nconst Actions = () => {\r\n  const {\r\n    setPrize,\r\n    setFirstDeal,\r\n    deckID,\r\n    returnValue,\r\n    setPlayerHand,\r\n    playerHand,\r\n    setPlayerScore,\r\n    playerScore,\r\n    setGameStart,\r\n    gameStarted,\r\n    setBet,\r\n    money,\r\n    setMoney,\r\n    prize,\r\n    roundOver,\r\n    setRoundOver,\r\n    playerWin,\r\n    setPlayerWin,\r\n    dealerWin,\r\n    setDealerWin,\r\n    dealerScore,\r\n    setDealersHand,\r\n    setDealerScore,\r\n    round,\r\n    dealersHand,\r\n    firstDeal,\r\n    setDealerHistory,\r\n    dealerHistory,\r\n    playerHistory,\r\n    setPlayerHistory,\r\n    dealerScoreHistory,\r\n    setDealerScoreHistory,\r\n    playerScoreHistory,\r\n    setPlayerScoreHistory,\r\n    roundArray,\r\n    setRoundArray,\r\n    setRound,\r\n    tie,\r\n    setTie,\r\n    dealersMove,\r\n    setDealersMove,\r\n    double,\r\n    setDouble,\r\n    bet,\r\n    historicArray,\r\n    setHistoricArray,\r\n    denyDouble,\r\n    setDenyDouble,\r\n    savedGame,\r\n  } = useEconomyContext();\r\n\r\n  const reset = () => {\r\n    setRoundArray([\r\n      ...roundArray,\r\n      [[...dealersHand], [...playerHand], dealerScore, playerScore, round],\r\n    ]);\r\n\r\n    setPlayerWin(false);\r\n    setDealerWin(false);\r\n    setTie(false);\r\n    setGameStart(false);\r\n    setRoundOver(false);\r\n    setDenyDouble(false);\r\n    setPlayerScore(0);\r\n    setPlayerHand([]);\r\n    setDealerScore(0);\r\n    setDealersHand([]);\r\n  };\r\n\r\n  const reshuffle = () => {\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n      })\r\n      .then(() => setHistoricArray([...historicArray, money]))\r\n      .then(() => reset())\r\n      .then(() => {\r\n        setMoney(1000);\r\n        setRound(0);\r\n        setRoundArray([]);\r\n      })\r\n      .catch((err) => console.log(err.name));\r\n  };\r\n\r\n  const hit = () => {\r\n    setRoundOver(false);\r\n    setDenyDouble(true);\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const value0 = returnValue(json.cards[0].value);\r\n\r\n        setPlayerHand([...playerHand, ...json.cards]);\r\n\r\n        setPlayerScore(playerScore + value0);\r\n      })\r\n      .catch((err) => console.log(err.name));\r\n  };\r\n\r\n  const stand = () => {\r\n    setFirstDeal(false);\r\n\r\n    let value0 = 0;\r\n\r\n    if (playerScore >= dealerScore) {\r\n      fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`)\r\n        .then((resp) => resp.json())\r\n        .then((json) => {\r\n          value0 = returnValue(json.cards[0].value);\r\n          setDealersHand([...dealersHand, json.cards[0]]);\r\n          setDealerScore(dealerScore + value0);\r\n          setDealersMove(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const doubleDown = () => {\r\n    setDouble(true);\r\n    setBet(bet * 2);\r\n    setPrize(bet * 2);\r\n    setMoney(money - bet);\r\n    hit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (double && firstDeal) {\r\n      setPrize(prize * 2);\r\n      setDouble(false);\r\n\r\n      if (playerScore <= 21) {\r\n        stand();\r\n      }\r\n    }\r\n\r\n    if (playerScore > 21 && !roundOver) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    } else if (playerScore === 21 && !dealerScore === 21) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setMoney(money + prize);\r\n      setBet(0);\r\n    } else if (playerScore === 21 && dealerScore === 21 && dealersMove) {\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(false);\r\n      setTie(true);\r\n      setMoney(money);\r\n      setBet(0);\r\n    } else if (dealerScore === 21 && playerScore < dealerScore && !firstDeal) {\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setTie(false);\r\n      setMoney(money);\r\n      setBet(0);\r\n    }\r\n\r\n    if (!firstDeal && dealerScore === 22 && dealersHand.length === 2) {\r\n      setDealerScore(21);\r\n    }\r\n\r\n    if (!firstDeal && playerScore === 22 && playerHand.length === 2) {\r\n      setPlayerScore(21);\r\n    }\r\n\r\n    if (playerScore > 21 && firstDeal) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      dealerScore < 21 &&\r\n      dealerScore < playerScore &&\r\n      !firstDeal &&\r\n      !roundOver &&\r\n      dealersMove\r\n    ) {\r\n      stand();\r\n      setDealersMove(true);\r\n    }\r\n\r\n    if (\r\n      playerScore === dealerScore &&\r\n      dealerScore < 21 &&\r\n      !firstDeal &&\r\n      !roundOver\r\n    ) {\r\n      if (\r\n        dealerScore <= 21 &&\r\n        dealerScore >= playerScore &&\r\n        !firstDeal &&\r\n        !dealersMove\r\n      )\r\n        stand();\r\n    }\r\n\r\n    if (\r\n      playerScore === dealerScore &&\r\n      dealerScore === 20 &&\r\n      !firstDeal &&\r\n      dealersMove\r\n    ) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setTie(true);\r\n      setDealersMove(false);\r\n      setBet(0);\r\n      setMoney(money + prize);\r\n    }\r\n\r\n    if (dealerScore > 21 && !firstDeal && dealersMove) {\r\n      setDealersMove(false);\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setTie(false);\r\n      setDealerWin(false);\r\n      setBet(0);\r\n      setMoney(money + prize);\r\n    }\r\n\r\n    if (dealerScore === 21 && !firstDeal) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      dealerScore > playerScore &&\r\n      playerScore <= 21 &&\r\n      dealerScore < 21 &&\r\n      !firstDeal &&\r\n      dealersMove\r\n    ) {\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setPlayerWin(false);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      playerScore > dealerScore &&\r\n      dealerScore <= 21 &&\r\n      playerScore < 21 &&\r\n      !firstDeal &&\r\n      roundOver &&\r\n      dealersMove\r\n    ) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setDealerWin(false);\r\n      setMoney(money + prize);\r\n      setBet(0);\r\n    }\r\n\r\n    if (dealerScore <= 21 && dealerScore > playerScore && !firstDeal) {\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n  }, [playerScore, dealerScore, firstDeal, dealersMove, savedGame]);\r\n\r\n  useEffect(() => {\r\n    setDealerHistory([...dealerHistory, ...dealersHand]);\r\n\r\n    setPlayerHistory([...playerHistory, ...playerHand]);\r\n\r\n    setDealerScoreHistory([...dealerScoreHistory, dealerScore]);\r\n\r\n    setPlayerScoreHistory([...playerScoreHistory, playerScore]);\r\n  }, [round]);\r\n\r\n  return !roundOver ? (\r\n    <StyledButtonsWrapper>\r\n      <StyledButton onClick={hit} type=\"button\">\r\n        Hit\r\n      </StyledButton>\r\n      <StyledButton onClick={stand} type=\"button\">\r\n        Stand\r\n      </StyledButton>\r\n      {firstDeal && !denyDouble && (\r\n        <StyledButton onClick={doubleDown} type=\"button\">\r\n          Double\r\n        </StyledButton>\r\n      )}\r\n    </StyledButtonsWrapper>\r\n  ) : (\r\n    gameStarted && roundOver && (\r\n      <StyledSummaryWrapper>\r\n        {dealerWin && <ParagraphLost>Dealer Wins!</ParagraphLost>}\r\n        {playerWin && <ParagraphWin>Win ${prize}</ParagraphWin>}\r\n        {tie && <ParagraphTie>Tie</ParagraphTie>}\r\n        {round < 5 ? (\r\n          <StyledButton type=\"button\" onClick={reset}>\r\n            Next Round\r\n          </StyledButton>\r\n        ) : (\r\n          <StyledButton type=\"button\" onClick={reshuffle}>\r\n            Start New Game\r\n          </StyledButton>\r\n        )}\r\n      </StyledSummaryWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","C:\\dev\\blackjack-js\\src\\components\\History\\History.js",[],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Money\\Money.js",[],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet\\Bet.js",[],"C:\\dev\\blackjack-js\\src\\components\\ScoreHistory\\ScoreHistory.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveLoadGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveGame\\SaveGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\LoadGame\\LoadGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\ResetGame\\ResetGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\CurrentRound\\CurrentRound.js",[],"C:\\dev\\blackjack-js\\src\\components\\Hands\\Hands.js",[],"C:\\dev\\blackjack-js\\src\\components\\Hands\\PlayersHand\\PlayersHand.js",[],"C:\\dev\\blackjack-js\\src\\components\\Hands\\DealersHand\\DealersHand.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":30,"column":23,"nodeType":"108","messageId":"109","endLine":30,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":67,"column":23,"nodeType":"108","messageId":"109","endLine":67,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":121,"column":9,"nodeType":"108","messageId":"109","endLine":121,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":130,"column":23,"nodeType":"108","messageId":"109","endLine":130,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":145,"column":23,"nodeType":"108","messageId":"109","endLine":145,"endColumn":34},"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]