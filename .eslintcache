[{"C:\\dev\\blackjack-js\\src\\index.js":"1","C:\\dev\\blackjack-js\\src\\views\\Root\\Root.js":"2","C:\\dev\\blackjack-js\\src\\components\\Card\\Card.js":"3","C:\\dev\\blackjack-js\\src\\components\\Economy\\Economy.js":"4","C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet-Buttons.js":"5","C:\\dev\\blackjack-js\\src\\context\\Economy-Context.js":"6","C:\\dev\\blackjack-js\\src\\components\\Controls\\Controls.js":"7","C:\\dev\\blackjack-js\\src\\components\\Actions\\Actions.js":"8","C:\\dev\\blackjack-js\\src\\components\\History\\History.js":"9","C:\\dev\\blackjack-js\\src\\components\\Economy\\Money\\Money.js":"10","C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet\\Bet.js":"11","C:\\dev\\blackjack-js\\src\\components\\ScoreHistory\\ScoreHistory.js":"12","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveLoadGame.js":"13","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveGame\\SaveGame.js":"14","C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\LoadGame\\LoadGame.js":"15","C:\\dev\\blackjack-js\\src\\components\\ResetGame\\ResetGame.js":"16","C:\\dev\\blackjack-js\\src\\components\\CurrentRound\\CurrentRound.js":"17"},{"size":212,"mtime":1610720067165,"results":"18","hashOfConfig":"19"},{"size":943,"mtime":1611079085270,"results":"20","hashOfConfig":"19"},{"size":554,"mtime":1610808401113,"results":"21","hashOfConfig":"22"},{"size":864,"mtime":1611080135689,"results":"23","hashOfConfig":"19"},{"size":2303,"mtime":1611082150147,"results":"24","hashOfConfig":"19"},{"size":3444,"mtime":1611069182408,"results":"25","hashOfConfig":"19"},{"size":3326,"mtime":1611069245952,"results":"26","hashOfConfig":"19"},{"size":9076,"mtime":1611077261787,"results":"27","hashOfConfig":"19"},{"size":974,"mtime":1611076670381,"results":"28","hashOfConfig":"19"},{"size":469,"mtime":1611080005078,"results":"29","hashOfConfig":"19"},{"size":363,"mtime":1611079190052,"results":"30","hashOfConfig":"19"},{"size":2698,"mtime":1611076737331,"results":"31","hashOfConfig":"19"},{"size":213,"mtime":1611055927476,"results":"32","hashOfConfig":"19"},{"size":1172,"mtime":1611079614723,"results":"33","hashOfConfig":"19"},{"size":1220,"mtime":1611079680208,"results":"34","hashOfConfig":"19"},{"size":1471,"mtime":1611076974557,"results":"35","hashOfConfig":"19"},{"size":433,"mtime":1611078356745,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xb18w0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1l3vzda",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\blackjack-js\\src\\index.js",[],"C:\\dev\\blackjack-js\\src\\views\\Root\\Root.js",[],"C:\\dev\\blackjack-js\\src\\components\\Card\\Card.js",[],["75","76","77","78","79"],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Economy.js",["80"],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet-Buttons.js",[],"C:\\dev\\blackjack-js\\src\\context\\Economy-Context.js",[],["81","82","83","84","85"],"C:\\dev\\blackjack-js\\src\\components\\Controls\\Controls.js",["86"],"import styled from 'styled-components';\r\nimport { useEconomyContext } from '../../context/Economy-Context';\r\nimport Actions from '../Actions/Actions';\r\n\r\nconst StyledCard = styled.img`\r\n  max-width: 100px;\r\n  max-height: 100px;\r\n`;\r\n\r\nconst Controls = () => {\r\n  const {\r\n    bet,\r\n    deckID,\r\n    returnValue,\r\n    dealersHand,\r\n    setDealersHand,\r\n    dealerScore,\r\n    setDealerScore,\r\n    playerHand,\r\n    setPlayerHand,\r\n    playerScore,\r\n    setPlayerScore,\r\n    gameStarted,\r\n    setGameStart,\r\n    firstDeal,\r\n    setFirstDeal,\r\n    setPrize,\r\n    round,\r\n    setRound,\r\n    setJustLoaded,\r\n  } = useEconomyContext();\r\n\r\n  const startGame = () => {\r\n    setGameStart(true);\r\n    setFirstDeal(true);\r\n    setRound(round + 1);\r\n    setJustLoaded(false);\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=4`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const value0 = returnValue(json.cards[0].value);\r\n        const value1 = returnValue(json.cards[1].value);\r\n        const value2 = returnValue(json.cards[2].value);\r\n        const value3 = returnValue(json.cards[3].value);\r\n\r\n        // json.cards.map((item) => returnValue(item.value));\r\n\r\n        setPlayerHand(json.cards.slice(0, 2));\r\n        setPlayerScore(value0 + value1);\r\n\r\n        setDealersHand(json.cards.slice(2, 4));\r\n        setDealerScore(value2 + value3);\r\n      })\r\n      .catch((err) => console.log(err.name))\r\n      .then(() => {\r\n        setPrize(bet * 1.5);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {bet > 0 && deckID && !gameStarted && (\r\n        <button type=\"button\" onClick={startGame}>\r\n          Deal\r\n        </button>\r\n      )}\r\n\r\n      {dealerScore > 0 && gameStarted && (\r\n        <div>\r\n          <Actions />\r\n          <h2>Dealears hand</h2>\r\n\r\n          {firstDeal ? (\r\n            <p>\r\n              Dealears score: {dealerScore - returnValue(dealersHand[1].value)}\r\n            </p>\r\n          ) : (\r\n            <p>Dealears score: {dealerScore}</p>\r\n          )}\r\n          {firstDeal ? (\r\n            <ul>\r\n              <li key={dealersHand[0].value + dealersHand[0].code}>\r\n                <StyledCard\r\n                  alt={dealersHand[0].value + dealersHand[0].code}\r\n                  src={dealersHand[0].image}\r\n                />\r\n              </li>\r\n              <li>\r\n                <StyledCard\r\n                  alt=\"Hidden Card\"\r\n                  src=\"https://www.pngkey.com/png/full/349-3492792_card-back.png\"\r\n                />\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul>\r\n              {dealersHand.map((item) => (\r\n                <li key={item.value + item.code + item.suit}>\r\n                  <StyledCard alt={item.value + item.code} src={item.image} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {playerScore > 0 && gameStarted && (\r\n        <div>\r\n          <h2>Players hand</h2>\r\n          <p>Player score: {playerScore}</p>\r\n          <ul>\r\n            {playerHand.map((item) => (\r\n              <li key={item.value + item.suit + item.code}>\r\n                <StyledCard alt={item.value + item.code} src={item.image} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","C:\\dev\\blackjack-js\\src\\components\\Actions\\Actions.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import { useEffect } from 'react';\r\nimport { useEconomyContext } from '../../context/Economy-Context';\r\n\r\nconst Actions = () => {\r\n  const {\r\n    setPrize,\r\n    setFirstDeal,\r\n    deckID,\r\n    returnValue,\r\n    setPlayerHand,\r\n    playerHand,\r\n    setPlayerScore,\r\n    playerScore,\r\n    setGameStart,\r\n    gameStarted,\r\n    setBet,\r\n    money,\r\n    setMoney,\r\n    prize,\r\n    roundOver,\r\n    setRoundOver,\r\n    playerWin,\r\n    setPlayerWin,\r\n    dealerWin,\r\n    setDealerWin,\r\n    dealerScore,\r\n    setDealersHand,\r\n    setDealerScore,\r\n    round,\r\n    dealersHand,\r\n    firstDeal,\r\n    setDealerHistory,\r\n    dealerHistory,\r\n    playerHistory,\r\n    setPlayerHistory,\r\n    dealerScoreHistory,\r\n    setDealerScoreHistory,\r\n    playerScoreHistory,\r\n    setPlayerScoreHistory,\r\n    roundArray,\r\n    setRoundArray,\r\n    setRound,\r\n    tie,\r\n    setTie,\r\n    dealersMove,\r\n    setDealersMove,\r\n    double,\r\n    setDouble,\r\n    bet,\r\n    historicArray,\r\n    setHistoricArray,\r\n    denyDouble,\r\n    setDenyDouble,\r\n    savedGame,\r\n  } = useEconomyContext();\r\n\r\n  const reset = () => {\r\n    setRoundArray([\r\n      ...roundArray,\r\n      [[...dealersHand], [...playerHand], dealerScore, playerScore, round],\r\n    ]);\r\n\r\n    setPlayerWin(false);\r\n    setDealerWin(false);\r\n    setTie(false);\r\n    setGameStart(false);\r\n    setRoundOver(false);\r\n    setDenyDouble(false);\r\n    setPlayerScore(0);\r\n    setPlayerHand([]);\r\n    setDealerScore(0);\r\n    setDealersHand([]);\r\n  };\r\n\r\n  const reshuffle = () => {\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n      })\r\n      .then(() => setHistoricArray([...historicArray, money]))\r\n      .then(() => reset())\r\n      .then(() => {\r\n        setMoney(1000);\r\n        setRound(0);\r\n        setRoundArray([]);\r\n      })\r\n      .catch((err) => console.log(err.name));\r\n  };\r\n\r\n  const hit = () => {\r\n    setRoundOver(false);\r\n    setDenyDouble(true);\r\n    fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const value0 = returnValue(json.cards[0].value);\r\n\r\n        setPlayerHand([...playerHand, ...json.cards]);\r\n\r\n        setPlayerScore(playerScore + value0);\r\n      })\r\n      .catch((err) => console.log(err.name));\r\n  };\r\n\r\n  const stand = () => {\r\n    // console.log(dealerScore);\r\n    // console.log(playerScore);\r\n    setFirstDeal(false);\r\n\r\n    console.log(dealersHand);\r\n    console.log(playerHand);\r\n\r\n    let value0 = 0;\r\n\r\n    if (playerScore >= dealerScore) {\r\n      console.log('Pobieram nowa karte bo za malo');\r\n      fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`)\r\n        .then((resp) => resp.json())\r\n        .then((json) => {\r\n          value0 = returnValue(json.cards[0].value);\r\n          setDealersHand([...dealersHand, json.cards[0]]);\r\n          setDealerScore(dealerScore + value0);\r\n          setDealersMove(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const doubleDown = () => {\r\n    setDouble(true);\r\n    setBet(bet * 2);\r\n    setPrize(bet * 2);\r\n    setMoney(money - bet);\r\n    hit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(`${dealerScore} ${playerScore} ${firstDeal} ${dealersMove}`);\r\n\r\n    console.log(`Is round over: ${roundOver}`);\r\n    console.log(`Round ${round}`);\r\n\r\n    if (double && firstDeal) {\r\n      setPrize(prize * 2);\r\n      setDouble(false);\r\n\r\n      if (playerScore <= 21) {\r\n        stand();\r\n      }\r\n    }\r\n\r\n    if (playerScore > 21 && !roundOver) {\r\n      console.log('Player LOSE');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    } else if (playerScore === 21 && !dealerScore === 21) {\r\n      console.log('PLAYER BLACKJACK');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setMoney(money + prize);\r\n      setBet(0);\r\n    } else if (playerScore === 21 && dealerScore === 21 && dealersMove) {\r\n      console.log('Player ma blackjacka  i dealer tez weic remix');\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(false);\r\n      setTie(true);\r\n      setMoney(money);\r\n      setBet(0);\r\n    } else if (dealerScore === 21 && playerScore < dealerScore) {\r\n      console.log('Wygrwa diler bo ma 21 i wiecej niz player');\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setTie(false);\r\n      setMoney(money);\r\n      setBet(0);\r\n    }\r\n\r\n    if (!firstDeal && dealerScore === 22 && dealersHand.length === 2) {\r\n      console.log('DEALER Ma 2 ASY CO ZA ASY');\r\n      setDealerScore(21);\r\n    }\r\n\r\n    if (!firstDeal && playerScore === 22 && playerHand.length === 2) {\r\n      console.log('PLAYER Ma 2 ASY CO ZA ASY');\r\n      setPlayerScore(21);\r\n    }\r\n\r\n    if (playerScore > 21 && firstDeal) {\r\n      console.log('PO CO FECZOWAĆ, I TAK KASZTAN PRZEGgrał');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      dealerScore < 21 &&\r\n      dealerScore < playerScore &&\r\n      !firstDeal &&\r\n      !roundOver &&\r\n      dealersMove\r\n    ) {\r\n      console.log('dodatkowy stand dealera ');\r\n      stand();\r\n      setDealersMove(true);\r\n    }\r\n\r\n    if (\r\n      playerScore === dealerScore &&\r\n      dealerScore < 21 &&\r\n      !firstDeal &&\r\n      !roundOver\r\n    ) {\r\n      console.log('BYLBY REMIS ALE JEBANIE JEDZIE DALEJ Z KURWAMI (DEALER)');\r\n\r\n      if (\r\n        dealerScore <= 21 &&\r\n        dealerScore >= playerScore &&\r\n        !firstDeal &&\r\n        !dealersMove\r\n      )\r\n        stand();\r\n    }\r\n\r\n    if (\r\n      playerScore === dealerScore &&\r\n      dealerScore === 20 &&\r\n      !firstDeal &&\r\n      dealersMove\r\n    ) {\r\n      console.log('TIE');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setTie(true);\r\n      setDealersMove(false);\r\n      setBet(0);\r\n      setMoney(money + prize);\r\n    }\r\n\r\n    if (dealerScore > 21 && !firstDeal && dealersMove) {\r\n      console.log('Player wygrywa bo dealer ma wiecej niz 21');\r\n      setDealersMove(false);\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setTie(false);\r\n      setDealerWin(false);\r\n      setBet(0);\r\n      setMoney(money + prize);\r\n    }\r\n\r\n    if (dealerScore === 21 && !firstDeal) {\r\n      console.log('dealer score = 21 i nie pierwszy deal');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      dealerScore > playerScore &&\r\n      playerScore <= 21 &&\r\n      dealerScore < 21 &&\r\n      !firstDeal &&\r\n      dealersMove\r\n    ) {\r\n      console.log(\r\n        'Dealer wygrywa bo ma wiecej punktow i player nie ma blackjacka i dealer ma mniej niz 21 punktow',\r\n      );\r\n      setFirstDeal(false);\r\n      setDealersMove(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setPlayerWin(false);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n\r\n    if (\r\n      playerScore > dealerScore &&\r\n      dealerScore <= 21 &&\r\n      playerScore < 21 &&\r\n      !firstDeal &&\r\n      roundOver &&\r\n      dealersMove\r\n    ) {\r\n      console.log(\r\n        'Player Wygrywa bo ma wiecej punktow i delaer nie ma blackjacka i player ma mniej niz 21 punktow',\r\n      );\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setPlayerWin(true);\r\n      setDealerWin(false);\r\n      setMoney(money + prize);\r\n      setBet(0);\r\n    }\r\n\r\n    if (dealerScore <= 21 && dealerScore > playerScore && !firstDeal) {\r\n      console.log('Kasztanie wygrywa diler');\r\n      setFirstDeal(false);\r\n      setRoundOver(true);\r\n      setDealerWin(true);\r\n      setBet(0);\r\n      setMoney(money);\r\n    }\r\n  }, [playerScore, dealerScore, firstDeal, dealersMove, savedGame]);\r\n\r\n  useEffect(() => {\r\n    setDealerHistory([...dealerHistory, ...dealersHand]);\r\n\r\n    setPlayerHistory([...playerHistory, ...playerHand]);\r\n\r\n    setDealerScoreHistory([...dealerScoreHistory, dealerScore]);\r\n\r\n    setPlayerScoreHistory([...playerScoreHistory, playerScore]);\r\n  }, [round]);\r\n\r\n  return !roundOver ? (\r\n    <div>\r\n      <button onClick={hit} type=\"button\">\r\n        Hit\r\n      </button>\r\n      <button onClick={stand} type=\"button\">\r\n        Stand\r\n      </button>\r\n      {firstDeal && !denyDouble && (\r\n        <button onClick={doubleDown} type=\"button\">\r\n          Double\r\n        </button>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    gameStarted && roundOver && (\r\n      <div>\r\n        <p>Round {round} / 5</p>\r\n        {dealerWin && <p>Dealer Wins!</p>}\r\n        {playerWin && <p>Win ${prize}</p>}\r\n        {tie && <p>Tie</p>}\r\n        {round < 5 ? (\r\n          <button type=\"button\" onClick={reset}>\r\n            Next Round\r\n          </button>\r\n        ) : (\r\n          <button type=\"button\" onClick={reshuffle}>\r\n            Start New Game\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","C:\\dev\\blackjack-js\\src\\components\\History\\History.js",[],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Money\\Money.js",[],"C:\\dev\\blackjack-js\\src\\components\\Economy\\Bet\\Bet.js",[],"C:\\dev\\blackjack-js\\src\\components\\ScoreHistory\\ScoreHistory.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveLoadGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\SaveGame\\SaveGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\SaveLoadGame\\LoadGame\\LoadGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\ResetGame\\ResetGame.js",[],"C:\\dev\\blackjack-js\\src\\components\\CurrentRound\\CurrentRound.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":22,"column":23,"nodeType":"123","messageId":"124","endLine":22,"endColumn":34},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","severity":1,"message":"122","line":54,"column":23,"nodeType":"123","messageId":"124","endLine":54,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":79,"column":9,"nodeType":"123","messageId":"124","endLine":79,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":88,"column":23,"nodeType":"123","messageId":"124","endLine":88,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":103,"column":23,"nodeType":"123","messageId":"124","endLine":103,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":111,"column":5,"nodeType":"123","messageId":"124","endLine":111,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":112,"column":5,"nodeType":"123","messageId":"124","endLine":112,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":117,"column":7,"nodeType":"123","messageId":"124","endLine":117,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":138,"column":5,"nodeType":"123","messageId":"124","endLine":138,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":140,"column":5,"nodeType":"123","messageId":"124","endLine":140,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":141,"column":5,"nodeType":"123","messageId":"124","endLine":141,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":153,"column":7,"nodeType":"123","messageId":"124","endLine":153,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":160,"column":7,"nodeType":"123","messageId":"124","endLine":160,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":167,"column":7,"nodeType":"123","messageId":"124","endLine":167,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":176,"column":7,"nodeType":"123","messageId":"124","endLine":176,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":187,"column":7,"nodeType":"123","messageId":"124","endLine":187,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":192,"column":7,"nodeType":"123","messageId":"124","endLine":192,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":197,"column":7,"nodeType":"123","messageId":"124","endLine":197,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":212,"column":7,"nodeType":"123","messageId":"124","endLine":212,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":223,"column":7,"nodeType":"123","messageId":"124","endLine":223,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":240,"column":7,"nodeType":"123","messageId":"124","endLine":240,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":250,"column":7,"nodeType":"123","messageId":"124","endLine":250,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":262,"column":7,"nodeType":"123","messageId":"124","endLine":262,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":277,"column":7,"nodeType":"123","messageId":"124","endLine":277,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":297,"column":7,"nodeType":"123","messageId":"124","endLine":297,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":309,"column":7,"nodeType":"123","messageId":"124","endLine":309,"endColumn":18},"lines-around-directive",["130"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["130"],[],[],[],[],"padding-line-between-statements"]